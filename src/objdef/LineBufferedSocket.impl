void LineBufferedSocket::__gc_traverse_members(visitproc _visit, void* _data) {
}

void LineBufferedSocket::__gc_clear_members() throw() {
}

void LineBufferedSocket::__gc_traverse(visitproc _visit, void* _data) {
    LineBufferedSocket::__gc_traverse_members(_visit, _data);
    Socket::__gc_traverse_members(_visit, _data);
    BufferedSocket::__gc_traverse_members(_visit, _data);
    TCPSocket::__gc_traverse_members(_visit, _data);
}

void LineBufferedSocket::__gc_clear() throw() {
    LineBufferedSocket::__gc_clear_members();
    Socket::__gc_clear_members();
    BufferedSocket::__gc_clear_members();
    TCPSocket::__gc_clear_members();
}

bool LineBufferedSocket::__gc_needtrack() throw() {
    return false;
}

string LineBufferedSocket::classname() const throw() { return "LineBufferedSocket"; }

