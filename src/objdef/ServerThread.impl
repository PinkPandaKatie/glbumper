void ServerThread::__gc_traverse_members(visitproc _visit, void* _data) {
    _visit(mgr, _data);
    for(vector<sptr<Message> >::iterator _itr1 = (extramsgs).begin(); _itr1 != (extramsgs).end(); ++_itr1) {
        _visit(*_itr1, _data);
    }
    _visit(world, _data);
    for(vector<sptr<Actor> >::iterator _itr1 = (startpts).begin(); _itr1 != (startpts).end(); ++_itr1) {
        _visit(*_itr1, _data);
    }
    _visit(sock, _data);
    _visit(sg, _data);
}

void ServerThread::__gc_clear_members() throw() {
    mgr = NULL;
    extramsgs.clear();
    world = NULL;
    startpts.clear();
    sock = NULL;
    sg = NULL;
}

void ServerThread::__gc_traverse(visitproc _visit, void* _data) {
    ServerThread::__gc_traverse_members(_visit, _data);
    Thread::__gc_traverse_members(_visit, _data);
}

void ServerThread::__gc_clear() throw() {
    ServerThread::__gc_clear_members();
    Thread::__gc_clear_members();
}

bool ServerThread::__gc_needtrack() throw() {
    return true;
}

string ServerThread::classname() const throw() { return "ServerThread"; }

